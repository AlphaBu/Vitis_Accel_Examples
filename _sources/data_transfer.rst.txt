Data Transfer
=============

This example illustrates several ways to use the OpenCL API to transfer
data to and from the FPGA

**KEY CONCEPTS:** OpenCL API, Data Transfer, Write Buffers, Read
Buffers, Map Buffers, Async Memcpy

**KEYWORDS:** enqueueWriteBuffer(), enqueueReadBuffer(),
enqueueMapBuffer(), enqueueUnmapMemObject(), enqueueMigrateMemObjects()

This example tests the data transfer bandwidth between host and global
memory for 3 different cases:

::

   1) Host to global memory transfer

   2) Global memory to host transfer 

   3) Bidirectional transfer.

Different combinations of buffer sizes and number of buffers are
created. For data transfer, ``clenqueueMigrateMemObjects()`` API is used
to transfer the data between host to global memory as this API does
immediate data transfer and is the right choice for bandwidth
measurement.

.. code:: cpp

   err = commands.enqueueMigrateMemObjects(mems1, 0/* 0 means from host*/);
   err = commands.enqueueMigrateMemObjects(mems2, CL_MIGRATE_MEM_OBJECT_HOST);

SUPPORTED PLATFORMS
-------------------

==================== ================= ================
Platform             Board             Software Version
==================== ================= ================
xilinx_u200_qdma     Xilinx Alveo U200 SCOUT 2019.2
xilinx_u280_xdma     Xilinx Alveo U280 SCOUT 2019.2
xilinx_u250_qdma     Xilinx Alveo U250 SCOUT 2019.2
xilinx_u200_xdma     Xilinx Alveo U200 SCOUT 2019.2
xilinx_u250_xdma     Xilinx Alveo U250 SCOUT 2019.2
xilinx_u280-es1_xdma Xilinx Alveo U280 SCOUT 2019.2
==================== ================= ================

DESIGN FILES
------------

Application code is located in the src directory. Accelerator binary
files will be compiled to the xclbin directory. The xclbin directory is
required by the Makefile and its contents will be filled during
compilation. A listing of all the files in this example is shown below

::

   src/dummy_kernel.cpp
   src/host.cpp

COMMAND LINE ARGUMENTS
----------------------

Once the environment has been configured, the application can be
executed by

::

   ./data_transfer <dummy_kernel XCLBIN>
