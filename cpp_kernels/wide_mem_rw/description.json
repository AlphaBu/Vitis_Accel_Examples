{
    "name": "Wide Memory Read/Write (C)", 
    "contributors": [
        {
            "url": "http://www.xilinx.com", 
            "group": "Xilinx"
        }
    ], 
    "launch": [
        {
            "cmd_args": "BUILD/vadd.xclbin", 
            "name": "generic launch for all flows"
        }
    ], 
    "platform_type": "pcie", 
    "host": {
        "compiler": {
            "sources": [
                "REPO_DIR/common/includes/xcl2"
            ], 
            "includepaths": [
                "REPO_DIR/common/includes/xcl2"
            ]
        }, 
        "host_exe": "host"
    }, 
    "key_concepts": [
        "Kernel to DDR", 
        "wide memory access", 
        "burst read and write"
    ], 
    "keywords": [
        "ap_uint<>", 
        "ap_int.h"
    ], 
    "runtime": [
        "OpenCL"
    ], 
    "os": [
        "Linux"
    ], 
    "containers": [
        {
            "accelerators": [
                {
                    "name": "vadd", 
                    "location": "src/vadd.cpp"
                }
            ], 
            "name": "vadd"
        }
    ], 
    "description": [
        "This is simple example of vector addition to demonstrate Wide Memory Access using ap_uint<512> data type. Based on input argument type, xocc compiler will figure our the memory datawidth between Global Memory and Kernel. For this example, ap_uint<512> datatype is used, so Memory datawidth will be 16 x (integer bit size) = 16 x 32 = 512 bit."
    ]
}