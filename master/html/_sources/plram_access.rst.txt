PLRAM access 
=============

This example shows the usage of PLRAM and how to use it with simple
matrix multiplication (Row x Col).

**KEY CONCEPTS:** Vitis Memory Hierarchy, PLRAMs

**KEYWORDS:** PLRAM

This example demonstrates how ``PLRAM`` feature of the Vitis memory
subsystem and how they integrate with the Vitis design process.

PLRAM is small shared memory which is built using the on-chip memory
resources of the FPGA fabric. It is intended to provide a small amount
of data storage that application kernels can share and access
rapidly(lowest latency). PLRAM behaves just like the DDR memory
resources managed by the Vitis memory subsystem.

PLRAM can be assigned to a buffer by using ``--sp`` tags in the kernel
linking stage.

::

   --sp mmult_1.a:PLRAM[0] --sp mmult_1.b:DDR[0] --sp mmult_1.c:PLRAM[1]

SUPPORTED SHELLS
----------------

==================== ================= ================
SHELL                Board             Software Version
==================== ================= ================
xilinx_u200_qdma     Xilinx Alveo U200 Vitis 2019.2
xilinx_u280_xdma     Xilinx Alveo U280 Vitis 2019.2
xilinx_u250_qdma     Xilinx Alveo U250 Vitis 2019.2
xilinx_u200_xdma     Xilinx Alveo U200 Vitis 2019.2
xilinx_u250_xdma     Xilinx Alveo U250 Vitis 2019.2
xilinx_u280-es1_xdma Xilinx Alveo U280 Vitis 2019.2
==================== ================= ================

DESIGN FILES
------------

Application code is located in the src directory. Accelerator binary
files will be compiled to the xclbin directory. The xclbin directory is
required by the Makefile and its contents will be filled during
compilation. A listing of all the files in this example is shown below

::

   src/host.cpp
   src/mmult.cpp

COMMAND LINE ARGUMENTS
----------------------

Once the environment has been configured, the application can be
executed by

::

   ./host <mmult XCLBIN>
