Host Global Bandwidth
=====================

Host to global memory bandwidth test

This example tests the data transfer bandwidth between host and global
memory for 3 cases : host to global memory transfer, global memory to
host transfer and bidirectional transfer. For PCIe platform case, Host
and device are connected via PCIe interconnect and latency of this
interconnect can be seen as the acceleration tax for the application.
Hence, these transfers should be efficiently managed.

For bandwidth test, ``clenqueueMigrateMemObjects()`` API is used to
transfer the data from host to global memory and vice versa.

.. code:: cpp

   err = commands.enqueueMigrateMemObjects(mems1, 0/* 0 means from host*/);
   err = commands.enqueueMigrateMemObjects(mems2, CL_MIGRATE_MEM_OBJECT_HOST);

SUPPORTED SHELLS
----------------

================ ================= ================
SHELL            Board             Software Version
================ ================= ================
xilinx_u200_qdma Xilinx Alveo U200 Vitis 2019.2
xilinx_u200_xdma Xilinx Alveo U200 Vitis 2019.2
xilinx_u250_qdma Xilinx Alveo U250 Vitis 2019.2
xilinx_u250_xdma Xilinx Alveo U250 Vitis 2019.2
================ ================= ================

DESIGN FILES
------------

Application code is located in the src directory. Accelerator binary
files will be compiled to the xclbin directory. The xclbin directory is
required by the Makefile and its contents will be filled during
compilation. A listing of all the files in this example is shown below

::

   src/host.cpp
   src/kernel.cpp

COMMAND LINE ARGUMENTS
----------------------

Once the environment has been configured, the application can be
executed by

::

   ./host_global <krnl_host_global XCLBIN>
