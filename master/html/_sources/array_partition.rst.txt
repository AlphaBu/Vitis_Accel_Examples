Array Partition 
================

This is a simple example of matrix multiplication (Row x Col) to
demonstrate how to achieve better performance by array partitioning,
using HLS kernel in Vitis Environment.

**KEY CONCEPTS:** Kernel Optimization, HLS C Kernel, Array Partition

**KEYWORDS:** #pragma HLS ARRAY_PARTITION, complete

This example demonstrates how ``array partition`` in HLS kernel can help
to improve the performance. In this example matrix multiple is
functionality is used to showcase the benefit of array partion. Design
contains two kernels “matmul” a simple matrix multiplication and
“matmul_partition” a matrix multiplication implimentation using array
partiton.

``#pragma HLS array partition`` is used to partition an array into
multiple smaller arrays or memories. Arrays can be partitioned in three
ways, ``cyclic`` where elements are put into smaller arrays one by one
in the interleaved manner until the whole array is partitioned,
``block`` where elements are put into smaller arrays from continuous
blocks of original array and ``complete`` where array is decomposed into
individual elements each having its own read/write ports. In this
example, ``complete`` partition is used to partition one of the
dimension of local Matrix array as below

.. code:: cpp

   int B[MAX_SIZE][MAX_SIZE];
   int C[MAX_SIZE][MAX_SIZE];
   #pragma HLS ARRAY_PARTITION variable = B dim = 2 complete
   #pragma HLS ARRAY_PARTITION variable = C dim = 2 complete

This array partition helps design to access 2nd dimension of both Matrix
B and C concurrently to reduce the overall latency.

SUPPORTED SHELLS
----------------

==================== ================= ================
SHELL                Board             Software Version
==================== ================= ================
xilinx_u200_qdma     Xilinx Alveo U200 Vitis 2019.2
xilinx_u280_xdma     Xilinx Alveo U280 Vitis 2019.2
xilinx_u250_qdma     Xilinx Alveo U250 Vitis 2019.2
xilinx_u200_xdma     Xilinx Alveo U200 Vitis 2019.2
xilinx_u250_xdma     Xilinx Alveo U250 Vitis 2019.2
xilinx_u280-es1_xdma Xilinx Alveo U280 Vitis 2019.2
==================== ================= ================

DESIGN FILES
------------

Application code is located in the src directory. Accelerator binary
files will be compiled to the xclbin directory. The xclbin directory is
required by the Makefile and its contents will be filled during
compilation. A listing of all the files in this example is shown below

::

   src/host.cpp
   src/matmul.cpp
   src/matmul_partition.cpp

COMMAND LINE ARGUMENTS
----------------------

Once the environment has been configured, the application can be
executed by

::

   ./array_partition <matmul XCLBIN>
