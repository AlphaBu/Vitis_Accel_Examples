{
    "name": "Parallel Prefix Sum (CL)", 
    "contributors": [
        {
            "url": "http://www.xilinx.com", 
            "group": "Xilinx"
        }
    ], 
    "launch": [
        {
            "cmd_args": "BUILD/krnl_sum_scan.xclbin", 
            "name": "generic launch for all flows"
        }
    ], 
    "platform_type": "pcie", 
    "host": {
        "compiler": {
            "sources": [
                "REPO_DIR/common/includes/xcl2"
            ], 
            "includepaths": [
                "REPO_DIR/common/includes/xcl2"
            ]
        }, 
        "host_exe": "sum_scan"
    }, 
    "key_concepts": [
        "Kernel Optimization", 
        "Array Partitioning", 
        "Pipeline"
    ], 
    "keywords": [
        "xcl_array_partition", 
        "xcl_pipeline_loop"
    ], 
    "runtime": [
        "OpenCL"
    ], 
    "os": [
        "Linux"
    ], 
    "containers": [
        {
            "accelerators": [
                {
                    "location": "src/krnl_sum_scan.cl", 
                    "name": "krnl_sum_scan", 
                    "clflags": "--kernel_frequency 235"
                }
            ], 
            "name": "krnl_sum_scan"
        }
    ], 
    "description": [
        "This is a simple example to explain the usage of pipeline and array partitioning for designing parallel prefix sum "
    ]
}